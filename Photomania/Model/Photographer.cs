// This file has been autogenerated from parsing an Objective-C header file added in Xcode.

using System;
using System.Linq;
using MonoTouch.CoreLocation;
using MonoTouch.Foundation;
using MonoTouch.CoreData;
using MonoTouch.ObjCRuntime;
using MonoTouch.UIKit;

namespace Photomania
{
	public partial class Photographer : NSManagedObject
	{
		public static NSString NameKey = (NSString) "name";
		public static NSString PhotosKey = (NSString) "photos";

		public Photographer(IntPtr handle) : base(handle)
		{
		}

		public string Name
		{
			get { return new NSString(ValueForKey(NameKey)); }
			set { SetValueForKey(value, NameKey); }
		}

		public NSSet Photos
		{
			get { return new NSSet(ValueForKey(PhotosKey)); }
			set { SetValueForKey(value, PhotosKey); }
		}

		[Export("title")]
		public string Title
		{
			get { return Name; }
		}

		[Export("subtitle")]
		public string Subtitle
		{
			get { return Photos.Count + " photos"; }
		}

		[Export("coordinate")]
		public CLLocationCoordinate2D Coordinate
		{
			get
			{
				var photo = (Photo) Photos.AnyObject;
				if (photo == null)
					return default(CLLocationCoordinate2D);
				return photo.Coordinate;
			}
		}

		[Export("thumbnail")]
		public UIImage Thumbnail
		{
			get
			{
				var photo = (Photo)Photos.AnyObject;
				if (photo == null)
					return null;
				return photo.Thumbnail;
			}
		}

		void SetValueForKey(string value, NSString key)
		{
			base.SetValueForKey((NSString)(value ?? ""), key);
		}

		public static Photographer InsertNewObject(NSManagedObjectContext context)
		{
			return (Photographer) NSEntityDescription.InsertNewObjectForEntityForName("Photographer", context);
		}

		public static Photographer WithName(string name, NSManagedObjectContext context)
		{
			Photographer photographer = null;

			// This is just like Photo(Flickr)'s method.  Look there for commentary.

			if (name.Length > 0)
			{
				var request = new NSFetchRequest("Photographer")
				{
					SortDescriptors = new[] {new NSSortDescriptor("name", true, new Selector("localizedCaseInsensitiveCompare:"))},
					Predicate =  NSPredicate.FromFormat("name = %@", new NSObject[] {(NSString) name})
				};

				NSError error;
				var matches = context.ExecuteFetchRequest(request, out error);

				if (matches == null || matches.Length > 1)
				{
					// handle error
				}
				else if (matches.Length == 0)
				{
					photographer = InsertNewObject(context);
					photographer.Name = name;
				}
				else
				{
					photographer = (Photographer) matches.First();
				}
			}

			return photographer;
		}
	}
}
